# Development Dockerfile for Node.js/TypeScript application

FROM node:18-alpine

# Install dumb-init for proper signal handling
RUN apk add --no-cache dumb-init

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install all dependencies (including dev dependencies)
RUN npm install

# Copy TypeScript config first
COPY tsconfig.json ./

# Copy source code
COPY . .

# Generate Prisma client
RUN npx prisma generate

# Debug: List files to see what's copied
RUN ls -la

# Debug: Check if TypeScript files exist
RUN find . -name "*.ts" | head -10

# Debug: Check if tsconfig.json exists
RUN cat tsconfig.json

# Debug: List files in types/express before build
RUN ls -la types/express || echo "types/express not found"

# Build TypeScript code using npm script (so type augmentation is included)
RUN npm run build

# Debug: Check if dist folder was created
RUN ls -la dist/ || echo "dist folder not found"

# Create logs directory
RUN mkdir -p logs

# Expose port
EXPOSE 4545

# Use dumb-init to handle signals properly
ENTRYPOINT ["dumb-init", "--"]

# Start the application in development mode with nodemon
CMD ["npm", "start"] 